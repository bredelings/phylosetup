from enaml.core.api import Conditional, Looper

from enaml.widgets.api import (
    Window, Label, Field, Form, DateSelector, CheckBox, GroupBox, Container,
    PushButton, MainWindow, MenuBar, Notebook, Page, FileDialogEx, ToolBar, ActionGroup, Action, VGroup, ObjectCombo
)

from enaml.widgets.menu import Menu
from enaml.widgets.action import Action

from partitions_tab import PartitionsTab

enamldef SubstitutionModelView(Form):
    attr smodel
    Label:
        text = 'Name'
    Field:
        text := smodel.name
    Label:
        text = 'Model'
    Field:
        text := smodel.model


enamldef ATModelNotebook(MainWindow):
    attr model
    title = "Phylosetup"
    MenuBar:
        Menu:
            title = "&File"
            Action:
                text = "Quit\tCtrl+Q"
                triggered :: raise SystemExit(0)
    Container:
        attr model = parent.model
        Notebook:
            attr model = parent.model
            tab_style = 'document'
            PartitionsTab:
                title = 'Partitions'
                closable = False
                tool_tip = 'Partition editor'
                model = parent.model
            Page:
                title = 'Substitution'
                closable = False
                tool_tip = 'Substitution models'
                Container:
                    VGroup:
                        Label:
                            text = 'Substitution Models'
                        ObjectCombo: combo:
                            items << [index for index in range(len(model.smodels))]
                            to_string = lambda index: model.get_substitution_model_name(index)
                    Conditional:
                       condition << combo.selected is not None
                       SubstitutionModelView:
                           smodel << model.smodels[combo.selected]
    
