import os.path

from enaml.core.api import Conditional, Looper

from enaml.widgets.api import (
    Window, Label, Field, Form, DateSelector, CheckBox, GroupBox, Container,
    PushButton, MainWindow, MenuBar, Notebook, Page, FileDialogEx, ToolBar, ActionGroup, Action, VGroup, ObjectCombo
)

from enaml.widgets.menu import Menu
from enaml.widgets.action import Action
from enaml.icon import Icon, IconImage
from enaml.image import Image

from partitions_tab import PartitionsTab
from substitution_models_tab import SubstitutionModelsTab
from indel_models_tab import IndelModelsTab

def load_icon(path):
        with open(path, 'rb') as f:
                data = f.read()
        img = Image(data=data)
        icg = IconImage(image=img)
        return Icon(images=[icg])

enamldef ATModelNotebook(MainWindow):
    attr model
    title = "Phylosetup"
    icon = load_icon('icon.svg')
    MenuBar:
        Menu:
            title = "&File"
            Action:
                text = "Quit\tCtrl+Q"
                triggered :: raise SystemExit(0)
    Container:
        attr model = parent.model
        Notebook:
            attr model = parent.model
            tab_style = 'document'
            PartitionsTab:
                title = 'Partitions'
                closable = False
                tool_tip = 'Partition editor'
                model = parent.model
            Conditional:
                condition << len(model.smodels) > 0
                SubstitutionModelsTab:
                    title = 'Substitution'
                    closable = False
                    tool_tip = 'Substitution models'
            Conditional:
                condition << len(model.imodels) > 0
                IndelModelsTab:
                    title = 'Indel'
                    closable = False
                    tool_tip = 'Indel models'
